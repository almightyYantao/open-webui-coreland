stages:
  - build
  - merge

variables:
  IMAGE_NAME: "registry.qunhequnhe.com/itsystem/open-webui"
  REGISTRY: "registry.qunhequnhe.com"
  PLATFORMS: "linux/amd64,linux/arm64"
  DOCKER_HOST: unix:///var/run/docker.sock
  DOCKER_TLS_CERTDIR: ""

.default-build-template: &default-build-template
  tags:
    - kube-runner
  image: docker.1ms.run/library/docker:24.0.2
  stage: build
  before_script:
    - apk add --no-cache curl jq bash
    - docker info
    # 准备 buildx builder，如果已存在就使用
    - |
      if ! docker buildx inspect mybuilder >/dev/null 2>&1; then
        docker buildx create --use --name mybuilder --buildkitd-flags '--oci-worker-image docker.1ms.run/moby/buildkit:buildx-stable-1'
      else
        docker buildx use mybuilder
      fi
    - docker buildx inspect --bootstrap
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY
  after_script:
    - docker logout $REGISTRY

build-main-image:
  <<: *default-build-template
  script:
    - echo "Building main image for platforms ${PLATFORMS} ..."
    - VERSION=$(jq -r '.version' package.json)
    - |
      docker buildx build \
        --platform ${PLATFORMS} \
        --label "org.opencontainers.image.revision=$CI_COMMIT_SHA" \
        --tag $IMAGE_NAME:latest \
        --tag $IMAGE_NAME:$VERSION \
        --push \
        --cache-from type=registry,ref=$IMAGE_NAME:cache \
        --cache-to type=registry,ref=$IMAGE_NAME:cache,mode=max \
        .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/'
      when: on_success

build-cuda-image:
  <<: *default-build-template
  script:
    - echo "Building CUDA image for platforms ${PLATFORMS} ..."
    - VERSION=$(jq -r '.version' package.json)
    - |
      docker buildx build \
        --platform ${PLATFORMS} \
        --label "org.opencontainers.image.revision=$CI_COMMIT_SHA" \
        --tag $IMAGE_NAME:cuda-latest \
        --tag $IMAGE_NAME:cuda-$VERSION \
        --push \
        --cache-from type=registry,ref=$IMAGE_NAME:cuda-cache \
        --cache-to type=registry,ref=$IMAGE_NAME:cuda-cache,mode=max \
        --build-arg USE_CUDA=true \
        .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/'
      when: on_success

merge-main-image:
  tags:
    - kube-runner
  image: docker.1ms.run/library/docker:24.0.2
  stage: merge
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY
  script:
    - echo "Merging manifests for multi-arch image..."
    - |
      docker buildx imagetools create \
        --tag $IMAGE_NAME:latest \
        --tag $IMAGE_NAME:amd64-latest \
        --tag $IMAGE_NAME:arm64-latest
    - docker buildx imagetools inspect $IMAGE_NAME:latest
  needs:
    - build-main-image
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'