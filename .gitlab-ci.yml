stages:
  - build-push

variables:
  IMAGE_NAME: "registry.qunhequnhe.com/itsystem/open-webui"
  REGISTRY: "registry.qunhequnhe.com"
  BUILDKIT_HOST: tcp://buildkitd.buildkit-prod.svc.cluster.local:1234
  PROXY_URL: "socks5://10.10.52.137:1088"
  PLATFORMS: "linux/amd64,linux/arm64"

build-push:
  stage: build-push
  image: docker.1ms.run/library/docker:24-cli
  tags:
    - kube-runner
  before_script:
    # 安装jq获取版本
    - echo "http://mirrors.aliyun.com/alpine/v3.18/main" > /etc/apk/repositories
    - echo "http://mirrors.aliyun.com/alpine/v3.18/community" >> /etc/apk/repositories
    - apk update
    - apk add --no-cache curl jq bash
    - VERSION=$(jq -r '.version' package.json)
    - echo "Building version:$VERSION"
    
    - echo "Testing connection to remote BuildKit daemon..."
    - |
      if timeout 10 nc -z buildkitd.buildkit-prod.svc.cluster.local 1234; then
        echo "✅ Remote BuildKit daemon is reachable"
        USE_REMOTE_BUILDKIT=true
      else
        echo "⚠️  Remote BuildKit daemon not reachable, falling back to local Docker"
        USE_REMOTE_BUILDKIT=false
      fi
    
    # 设置 buildx
    - docker buildx version
    - |
      # 清理可能存在的 builder
      docker buildx rm remote-builder || true
      
      echo "Setting up remote BuildKit builder..."
      docker buildx create \
        --use \
        --name remote-builder \
        --driver remote \
        --driver-opt env.HTTP_PROXY=$PROXY_URL \
        --driver-opt env.HTTPS_PROXY=$PROXY_URL \
        --driver-opt env.ALL_PROXY=$PROXY_URL \
        $BUILDKIT_HOST
    
    # 启动并检查 builder
    - |
      for i in {1..3}; do
        echo "Attempting to bootstrap builder (attempt $i/3)..."
        if docker buildx inspect --bootstrap remote-builder; then
          echo "✅ Builder bootstrapped successfully"
          docker buildx ls
          break
        else
          echo "❌ Bootstrap failed, retrying in 10 seconds..."
          sleep 10
        fi
        if [ $i -eq 3 ]; then
          echo "❌ Failed to bootstrap builder after 3 attempts"
          exit 1
        fi
      done

    # 登录私有仓库
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY
  script:
    
    # 验证构建器
    - docker buildx ls
    - docker buildx inspect remote-builder --bootstrap
    
    # 多平台构建并推送
    - |
      docker buildx build \
        --platform $PLATFORMS \
        --build-arg HTTP_PROXY=$PROXY_URL \
        --build-arg HTTPS_PROXY=$PROXY_URL \
        --build-arg ALL_PROXY=$PROXY_URL \
        --tag $IMAGE_NAME:$CI_COMMIT_SHA \
        --tag $IMAGE_NAME:latest \
        --tag $IMAGE_NAME:$VERSION \
        --push .
  only:
    - main
    - develop