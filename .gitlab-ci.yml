stages:
  - build
  - merge

variables:
  IMAGE_NAME: "registry.qunhequnhe.com/itsystem/open-webui"
  REGISTRY: "registry.qunhequnhe.com"
  PLATFORMS: "linux/amd64,linux/arm64"

.default-build-template: &default-build-template
  tags:
    - kube-runner
  image: docker.1ms.run/library/docker:24.0.2
  stage: build
  services:
    - name: docker.1ms.run/library/docker:dind
      alias: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - apk add --no-cache curl jq bash
    - docker info
    # 准备 buildx builder，支持多平台构建
    - |
      if ! docker buildx inspect mybuilder >/dev/null 2>&1; then
        docker buildx create --use --name mybuilder
      else
        docker buildx use mybuilder
      fi
    - docker buildx inspect --bootstrap
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY
  after_script:
    - docker logout $REGISTRY

build-main-image:
  <<: *default-build-template
  script:
    - echo "Building main image for platforms ${PLATFORMS} ..."
    - |
      VERSION=$(jq -r '.version' package.json)
      echo "Read version from package.json: $VERSION"
      docker buildx build \
        --platform ${PLATFORMS} \
        --label "org.opencontainers.image.revision=$CI_COMMIT_SHA" \
        --tag $IMAGE_NAME:latest \
        --tag $IMAGE_NAME:$VERSION \
        --push \
        --cache-from type=registry,ref=$IMAGE_NAME:cache \
        --cache-to type=registry,ref=$IMAGE_NAME:cache,mode=max \
        .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/'
      when: on_success

build-cuda-image:
  <<: *default-build-template
  script:
    - echo "Building CUDA image for platforms ${PLATFORMS} ..."
    - |
      VERSION=$(jq -r '.version' package.json)
      docker buildx build \
        --platform ${PLATFORMS} \
        --label "org.opencontainers.image.revision=$CI_COMMIT_SHA" \
        --tag $IMAGE_NAME:cuda-latest \
        --tag $IMAGE_NAME:cuda-$VERSION \
        --push \
        --cache-from type=registry,ref=$IMAGE_NAME:cuda-cache \
        --cache-to type=registry,ref=$IMAGE_NAME:cuda-cache,mode=max \
        --build-arg USE_CUDA=true \
        .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/'
      when: on_success

# 你可以继续类似地定义 build-cuda126-image, build-ollama-image 等 Job

merge-main-image:
  tags:
    - kube-runner
  image: docker.1ms.run/library/docker:24.0.2
  stage: merge
  services:
    - name: docker.1ms.run/library/docker:dind
      alias: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
  script:
    - echo "Merging manifests for multi-arch image..."
    - |
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $REGISTRY

      # 注意：buildx imagetools create 的参数是镜像的完整tag列表，这里我们用latest和具体版本tag
      docker buildx imagetools create \
        --tag $IMAGE_NAME:latest \
        --tag $IMAGE_NAME:amd64-latest \
        --tag $IMAGE_NAME:arm64-latest

    - docker buildx imagetools inspect $IMAGE_NAME:latest
  needs:
    - build-main-image
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# 可以类似地定义 merge-cuda-image，merge-cuda126-image，merge-ollama-image 等 Job